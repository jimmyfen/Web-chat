#!/user/bin/env php
<?php
use App\Process\ServerManage;
use App\Config;

define('ROOT_PATH', realpath(getcwd()));
require 'vendor/autoload.php';
error_reporting(E_ALL);
ini_set('error_log', ROOT_PATH . '/Logs/error.log');

function commandHandle()
{
    list($command, $options) = commandParse();

    switch ( $command ) {
        case 'start':
            ServerManage::getInstance($options)->start();
            break;
        case 'stop':
            serverStop(); 
            break;
        case 'reload':
            serverReload();
            break;
        case '--help':
        case '-h':
        case 'help':
        case 'h':
        default:
            showHelp();
            break;
    }
}

/**
 * 关闭服务器
 * @return void
 */
function serverStop()
{
    $conf = Config::getInstance()->getConf('MAIN_SERVER');
    $pid_file = $conf['SETTING']['pid_file'];

    if ( is_file($pid_file) ) {
        $pid = file_get_contents($pid_file);
    }

    if ( !isset($pid) ||  !swoole_process::kill($pid, 0) ) {
        echo "\e[31m 进程：{$pid}不存在.\e[0m\n";
        return;
    }

    swoole_process::kill($pid);

    $time = time();
    while ( true ) {
        usleep(1000);
        if ( !swoole_process::kill($pid, 0) ) {
            echo "\e[31mserver stop at " . date('Y-m-d H:i:s') . ".\e[0m\n";
            if ( is_file($pid_file) ) {
                @unlink($pid_file);
            }
            break;
        } else {
            if ( time() - $time > 5 ) {
                echo "\e[31mstop server fail,please try again\e[0m\n";
                break;
            }
        }
    }
}

function serverReload()
{
    $conf = Config::getInstance()->getConf('MAIN_SERVER');
    $pid_file = $conf['SETTING']['pid_file'];

    if ( is_file($pid_file) ) {
        $pid = file_get_contents($pid_file);
    }

    if ( !isset($pid) ||  !swoole_process::kill($pid, 0) ) {
        echo "\e[31m 进程：{$pid}不存在.\e[0m\n";
        return;
    }

    swoole_process::kill($pid, SIGUSR2);
    echo "\e[31mserver reload at" . date('Y-m-d H:i:s') . ".\e[0m\n";
}

/**
 * 解析参数
 * @return array
 */
function commandParse()
{
    global $argv;

    $command = '';
    $options = [];
    if ( isset($argv[1]) ) {
        $command = $argv[1];
    }

    foreach ( $argv as $item ) {
        if ( substr($item, 0, 2) === '--' ) {
            $temp          = trim($item, "--");
            $temp          = explode("-", $temp);
            $key           = array_shift($temp);
            $options[$key] = array_shift($temp) ?: '';
        }
    }

    return [ $command, $options ];
}


function showHelp()
{
    echo <<<HELP
\e[33m用法：
\e[31m    php server (start|stop|reload) (--d)\e[0m
\e[33m参数说明：\e[0m
\e[37m    \e[36mstart\e[0m   启动进程 接入--d表示以守护进程方式运行\e[0m
\e[37m    \e[36mstop\e[0m    结束进程\e[0m
\e[37m    \e[36mreload\e[0m  重启进程\e[0m\n
HELP;
}

commandHandle();